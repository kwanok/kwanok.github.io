{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-832bede4dd9cb4b281f2.js","mappings":"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","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  Hi.\n    </Text>\n    <p>{`노관옥입니다.`}</p>\n    <h6>{`2022.03.10 ~ 2022.03.31 육군훈련소`}</h6>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Title text=\"Projects\" mdxType=\"Title\" />\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.myseoulpass.com/\"\n        }}>{`My Seoul Pass`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["name","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","fontSize","fontWeight","color","isMDXComponent","Title","makeShortcode","text","parentName","posts","useMinimalBlogConfig","basePath","blogPath","siteTitle","useSiteMetadata","Layout","visuallyHidden","p","mt","Hero","Link","to","replaceSlashes","Listing","showTags","List","Bottom","allPost","data","React","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","styles","_t$styles","post","Box","title","date","ItemTags","className","BlogListItem"],"sourceRoot":""}